version: '3.8'

services:

  suppliers-service:
    build: ./Suppliers
    container_name: suppliers-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      suppliers-db:
        condition: service_healthy

  suppliers-db:
    image: mongo:6.0
    container_name: suppliers-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: pwd
    volumes:
      - suppliers_mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 10

  inventory-service:
    build: ./Inventory
    container_name: inventory-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      inventory-db:
        condition: service_healthy

  inventory-db:
    image: mysql:8.0
    container_name: inventory-db
    environment:
      MYSQL_ROOT_PASSWORD: verysecretpwd
      MYSQL_DATABASE: inventory-db
      MYSQL_USER: user
      MYSQL_PASSWORD: pwd
    volumes:
      - inventory_mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-uuser", "-ppwd", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10

  employee-service:
    build: ./Employee
    container_name: employee-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      employee-db:
        condition: service_healthy

  employee-db:
    image: postgres:16
    container_name: employee-db
    environment:
      POSTGRES_DB: employee-db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pwd
    volumes:
      - employee_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 10

  sales-service:
    build: ./Sales
    container_name: sales-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      sales-db:
        condition: service_healthy

  sales-db:
    image: mysql:8.0
    container_name: sales-db
    environment:
      MYSQL_ROOT_PASSWORD: verysecretpwd
      MYSQL_DATABASE: sales-db
      MYSQL_USER: user
      MYSQL_PASSWORD: pwd
    volumes:
      - sales_mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-uuser", "-ppwd", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10

  payment-service:
    build: ./Payment
    container_name: payment-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      payment-db:
        condition: service_healthy

  payment-db:
    image: postgres:16
    container_name: payment-db
    environment:
      POSTGRES_DB: payment-db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pwd
    volumes:
      - payment_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d payment-db"]
      interval: 10s
      timeout: 5s
      retries: 10

  api-gateway-service:
    build: ./api-gateway-service
    container_name: api-gateway-service
    ports:
      - "8080:8080"  # âœ… Only exposed service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      suppliers-service:
        condition: service_started
      inventory-service:
        condition: service_started
      employee-service:
        condition: service_started
      sales-service:
        condition: service_started
      payment-service:
        condition: service_started

volumes:
  suppliers_mongo_data:
  inventory_mysql_data:
  employee_pgdata:
  sales_mysql_data:
  payment_pgdata:
